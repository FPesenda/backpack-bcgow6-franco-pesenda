basePath: /api/v1
definitions:
  request.BuyerPatch:
    properties:
      first_name:
        type: string
      last_name:
        type: string
    required:
    - first_name
    - last_name
    type: object
  request.BuyerPost:
    properties:
      card_number_id:
        type: string
      first_name:
        type: string
      last_name:
        type: string
    required:
    - card_number_id
    - first_name
    - last_name
    type: object
  request.EmployeeCreate:
    properties:
      card_number_id:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      warehouse_id:
        type: integer
    required:
    - card_number_id
    - first_name
    - last_name
    - warehouse_id
    type: object
  request.EmployeePatch:
    properties:
      first_name:
        type: string
      last_name:
        type: string
      warehouse_id:
        type: integer
    type: object
  request.Product:
    properties:
      description:
        type: string
      expiration_rate:
        type: integer
      freezing_rate:
        type: integer
      height:
        type: number
      length:
        type: number
      netweight:
        type: number
      product_code:
        type: string
      product_type_id:
        type: integer
      recommended_freezing_temperature:
        type: number
      seller_id:
        type: integer
      width:
        type: number
    required:
    - description
    - expiration_rate
    - freezing_rate
    - height
    - length
    - netweight
    - product_code
    - product_type_id
    - recommended_freezing_temperature
    - width
    type: object
  request.ProductUpdate:
    properties:
      description:
        type: string
      expiration_rate:
        type: integer
      freezing_rate:
        type: integer
      height:
        type: number
      length:
        type: number
      netweight:
        type: number
      product_code:
        type: string
      product_type_id:
        type: integer
      recommended_freezing_temperature:
        type: number
      seller_id:
        type: integer
      width:
        type: number
    type: object
  request.RequestSeller:
    properties:
      address:
        type: string
      cid:
        type: integer
      company_name:
        type: string
      telephone:
        type: string
    type: object
  request.SectionPatch:
    properties:
      current_capacity:
        type: integer
      current_temperature:
        type: integer
      maximum_capacity:
        type: integer
      minimum_capacity:
        type: integer
      minimum_temperature:
        type: integer
      product_type_id:
        type: integer
      section_number:
        type: integer
      warehouse_id:
        type: integer
    type: object
  request.SectionPost:
    properties:
      current_capacity:
        type: integer
      current_temperature:
        type: integer
      maximum_capacity:
        type: integer
      minimum_capacity:
        type: integer
      minimum_temperature:
        type: integer
      product_type_id:
        type: integer
      section_number:
        type: integer
      warehouse_id:
        type: integer
    required:
    - current_capacity
    - current_temperature
    - maximum_capacity
    - minimum_capacity
    - minimum_temperature
    - product_type_id
    - section_number
    - warehouse_id
    type: object
  request.Warehouse:
    properties:
      address:
        type: string
      minimum_capacity:
        type: integer
      minimum_temperature:
        type: integer
      telephone:
        type: string
      warehouse_code:
        type: string
    type: object
  web.errorResponse:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  web.response:
    properties:
      data: {}
    type: object
info:
  contact:
    name: API Support
    url: https://developers.mercadolibre.com.ar/support
  description: This API Handle MELI - Fresh products
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://developers.mercadolibre.com.ar/es_ar/terminos-y-condiciones
  title: Grupo 4 - Proyecto Integrador
  version: "1.0"
paths:
  /buyers:
    get:
      description: get Buyers
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.response'
      summary: List Buyers
      tags:
      - Buyer
    post:
      consumes:
      - application/json
      description: store buyers
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Buyer to store
        in: body
        name: buyer
        required: true
        schema:
          $ref: '#/definitions/request.BuyerPost'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/web.response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/web.response'
      summary: Store Buyers
      tags:
      - Buyer
  /buyers/{id}:
    delete:
      description: delete Buyer
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Buyer id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.response'
      summary: Delete Buyer
      tags:
      - Buyer
    get:
      description: get Buyer by id
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Buyer id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.response'
      summary: Buyer by id
      tags:
      - Buyer
    patch:
      consumes:
      - application/json
      description: update Buyer
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Buyer id
        in: path
        name: id
        required: true
        type: integer
      - description: Buyer to update
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.BuyerPatch'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/web.response'
      summary: Update Buyer
      tags:
      - Buyer
  /employee:
    get:
      description: get employees
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: List employees
      tags:
      - Employees
    post:
      consumes:
      - application/json
      description: create a new employee with all attributes
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: employee to create
        in: body
        name: employee
        required: true
        schema:
          $ref: '#/definitions/request.EmployeeCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/web.response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Create a new employee
      tags:
      - Employees
  /employee/{id}:
    delete:
      description: Delete a employee selected by id
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: employee id
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/web.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Delete a employee
      tags:
      - Employees
    get:
      description: get employees
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: employee id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Get employees by ID
      tags:
      - Employees
    patch:
      consumes:
      - application/json
      description: update a employee selected by id
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: employee id
        in: path
        name: id
        required: true
        type: string
      - description: employee to update
        in: body
        name: employee
        required: true
        schema:
          $ref: '#/definitions/request.EmployeePatch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Update a employee
      tags:
      - Employees
  /products:
    get:
      description: get Products
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: List Products
      tags:
      - Product
    post:
      consumes:
      - application/json
      description: create Product
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Product to create
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/request.Product'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/web.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Create Product
      tags:
      - Product
  /products/{id}:
    delete:
      description: delete Product
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Product id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Delete Product
      tags:
      - Product
    get:
      description: get Product by id
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Product id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Product by id
      tags:
      - Product
    patch:
      consumes:
      - application/json
      description: patch Product
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Product id
        in: path
        name: id
        required: true
        type: integer
      - description: Product to update
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.ProductUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Patch Product
      tags:
      - Product
  /sections:
    get:
      description: get sections
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: List sections
      tags:
      - Sections
  /sections/:
    post:
      consumes:
      - application/json
      description: create a new section with all attributes
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: section to create
        in: body
        name: section
        required: true
        schema:
          $ref: '#/definitions/request.SectionPost'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/web.response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/web.errorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Create a new section
      tags:
      - Sections
  /sections/{id}:
    delete:
      description: Delete a section selected by id
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Section id
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/web.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Delete a section
      tags:
      - Sections
    get:
      description: get section by id
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Section id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Get section by ID
      tags:
      - Sections
    patch:
      consumes:
      - application/json
      description: update a section selected by id
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Section id
        in: path
        name: id
        required: true
        type: string
      - description: section to update
        in: body
        name: section
        required: true
        schema:
          $ref: '#/definitions/request.SectionPatch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/web.errorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/web.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Update a section
      tags:
      - Sections
  /sellers:
    get:
      description: get Sellers
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: List Sellers
      tags:
      - Sellers
    post:
      consumes:
      - application/json
      description: create Seller
      parameters:
      - description: Seller to create
        in: body
        name: seller
        required: true
        schema:
          $ref: '#/definitions/request.RequestSeller'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/web.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/web.errorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Create Seller
      tags:
      - Sellers
  /sellers/{id}:
    delete:
      description: delete Seller
      parameters:
      - description: Seller id
        in: path
        name: id
        required: true
        type: integer
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/web.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Delete Seller
      tags:
      - Sellers
    get:
      description: get Seller by id
      parameters:
      - description: Seller id
        in: path
        name: id
        required: true
        type: integer
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Seller by id
      tags:
      - Sellers
    patch:
      consumes:
      - application/json
      description: update Seller
      parameters:
      - description: Seller id
        in: path
        name: id
        required: true
        type: integer
      - description: Seller to update
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.RequestSeller'
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
      summary: Update Seller
      tags:
      - Sellers
  /warehouses:
    get:
      description: get Warehouses
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.response'
      summary: List Warehouses
      tags:
      - Warehouse
    post:
      consumes:
      - application/json
      description: store warehouses
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Warehouse to store
        in: body
        name: warehouse
        required: true
        schema:
          $ref: '#/definitions/request.Warehouse'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/web.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/web.response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/web.response'
      summary: Store Warehouses
      tags:
      - Warehouse
  /warehouses/{id}:
    delete:
      description: delete Warehouse
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Warehouse id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.response'
      summary: Delete Warehouse
      tags:
      - Warehouse
    get:
      description: get Warehouse by id
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Product id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.response'
      summary: Warehouse by id
      tags:
      - Warehouse
    patch:
      consumes:
      - application/json
      description: update Warehouse
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Warehouse id
        in: path
        name: id
        required: true
        type: integer
      - description: Warehouse to update
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.Warehouse'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/web.response'
      summary: Update Warehouse
      tags:
      - Warehouse
swagger: "2.0"
